_format_version: "3.0"
_transform: true

plugins:
  - name: jwt
    config:
      claims_to_verify:
        - exp
      key_claim_name: kid
      secret_is_base64: false
      run_on_preflight: true
      header_names:
        - Authorization
      cookie_names: []
      maximum_expiration: 0
      algorithm: RS256
      rsa_public_key: null
      uri_param_names:
        - jwt
      consumer_claim: []
      consumer_by:
        - username
        - custom_id
      anonymous: null
      run_on_preflight: true

consumers:
  - username: cognito-app
    jwt_secrets:
      - algorithm: RS256
        key: https://cognito-idp.${AWS_REGION}.amazonaws.com/${AWS_COGNITO_USER_POOL_ID}/.well-known/jwks.json
        rsa_public_key: null

services:
  - name: ai-test-service
    url: http://ai-test-service:8000
    routes:
      - name: ai-test-route
        paths:
          - /api/v1/ai-test
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: true
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true

  - name: booking-service
    url: http://booking-service:8002
    routes:
      - name: booking-route
        paths:
          - /api/v1/bookings
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: true
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true
      - name: jwt
        config:
          claims_to_verify:
            - exp
          key_claim_name: kid
          secret_is_base64: false
          run_on_preflight: true
          header_names:
            - Authorization
          cookie_names: []
          maximum_expiration: 0
          algorithm: RS256
          rsa_public_key: null
          uri_param_names:
            - jwt
          consumer_claim: []
          consumer_by:
            - username
            - custom_id
          anonymous: null
          run_on_preflight: true

  - name: user-management-service
    url: http://user-management-service:8080
    routes:
      - name: user-management-route
        paths:
          - /api/v1/users
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: true
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true

  - name: ticket-management-service
    url: http://ticket-management-service:8000
    routes:
      - name: ticket-management-route
        paths:
          - /api/v1/tickets
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: true
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true

  - name: events-service
    url: http://events-service:8001
    routes:
      - name: events-route
        paths:
          - /api/v1/events
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: true
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true

  - name: billing-service
    url: http://billing-service:5001
    routes:
      - name: billing-route
        paths:
          - /api/v1/billing
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: true
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true

  - name: refund-service
    url: http://refund-composite-service:8880
    routes:
      - name: refund-route
        paths:
          - /api/v1/refunds
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        strip_path: false
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true

  - name: logging-service
    url: http://logging-service:9000
    routes:
      - name: logging-route
        paths:
          - /api/v1/logs
        methods:
          - GET
          - POST
        strip_path: false
    plugins:
      - name: cors
        config:
          origins: ["http://localhost:3000"]
          methods: ["GET", "POST", "OPTIONS"]
          headers: ["Accept", "Authorization", "Content-Type"]
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: local
      - name: prometheus
        enabled: true 