volumes:
  kong-data:

networks:
  kong-net:
    driver: bridge

services:
  #######################################
  # Kong Database
  #######################################
  kong-database:
    image: postgres:16.2
    container_name: kong-database
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - kong-data:/var/lib/postgresql/data

  #######################################
  # Kong Migration
  #######################################
  kong-migration:
    image: kong:3.5
    container_name: kong-migration
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    depends_on:
      kong-database:
        condition: service_healthy

  #######################################
  # Kong Gateway
  #######################################
  kong:
    image: kong:3.5
    container_name: kong-gateway
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      kong-migration:
        condition: service_completed_successfully
    ports:
      - "8000:8000" # Kong proxy port
      - "8001:8001" # Kong admin API
      - "8002:8002" # Kong admin GUI
      - "8443:8443" # Kong proxy SSL port
      - "8444:8444" # Kong admin SSL port
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 5