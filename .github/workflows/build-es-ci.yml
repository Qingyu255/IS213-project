name: Build and Push eventsService Docker Image to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - 'services/eventsService/**'

  workflow_dispatch: # This enables the manual run button 

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  test:
    name: Run Unit Tests (Java)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: services/eventsService/demo

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Grant execute permission to mvnw
        run: chmod +x mvnw

      - name: Run Maven Tests
        run: ./mvnw test

  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: test  # ⬅️ Only run if tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Tag Docker Image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:eventsService-latest ./services/eventsService
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:eventsService-latest $ECR_REGISTRY/$ECR_REPOSITORY:eventsService-${{ github.sha }}

      - name: Push Images to AWS ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:eventsService-latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:eventsService-${{ github.sha }}

